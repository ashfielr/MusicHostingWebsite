#!/bin/bash

set -e # abort script at first error

##### REFERENCE START - https://stackoverflow.com/a/10015707 ####
# Allows us to read user input below, assigns stdin to keyboard
exec < /dev/tty
##### REFERENCE END - https://stackoverflow.com/a/10015707 ####

##### REFERENCE START - https://stackoverflow.com/a/20983251
# Set variable to use to display colour
# tput - https://linux.die.net/man/1/tput
RED=`tput setaf 1`
GREEN=`tput setaf 2`
YELLOW=`tput setaf 3`
BLUE=`tput setaf 4`
MAGENTA=`tput setaf 5`
CYAN=`tput setaf 6`
WHITE=`tput setaf 7`
RESET=`tput sgr0`
##### REFERENCE END - https://stackoverflow.com/a/20983251

echo "COMMIT-MSG" # Display text

COMMIT_MSG_FILE=$1 # the commit message file is the 

MSG=$(< $1) # Store the contents of the commit message file

# check that the file is 5 lines long
INVALID_MSG="" # Message that will be displayed if error occurs - details of why commit msg was not valid
LINE_COUNT=`wc -l < "$COMMIT_MSG_FILE"` # Get the number of lines for the commit message file
if [[ $LINE_COUNT != 5 ]]; then
  INVALID_MSG="Commit message not 5 lines"
else
  LINES=("$(sed -n '1p' < "$COMMIT_MSG_FILE")" # Array containing first 5 lines of commit msg
  "$(sed -n '2p' < "$COMMIT_MSG_FILE")"
  "$(sed -n '3p' < "$COMMIT_MSG_FILE")"
  "$(sed -n '4p' < "$COMMIT_MSG_FILE")"
  "$(sed -n '5p' < "$COMMIT_MSG_FILE")")
  
  # # Lines 1,3,5 should contain text (not be blank) - if they arent store relevant error message
  if [ -z "${LINES[0]}"] || [ -z "${LINES[2]}" ] || [ -z "${LINES[4]}" ]; then
    INVALID_MSG="Lines 1,3,5 should contain text (not be blank)"
  
  # Lines 2 and 4 should be blank - if they arent then store relevant error message
  elif [ -n "${LINES[1]}" ] || [ -n "${LINES[3]}" ]; then
    INVALID_MSG="Lines 2 and 4 should be blank"
  fi
fi

# Inform the user if commit message is not formatted correctly - display the error message
if [[ $INVALID_MSG ]]; then
  echo "${RED}Commit message not formatted correctly${RESET}"
  echo "${RED}${INVALID_MSG}${RESET}"
  # Display format expected
  echo "Should be formatted as follows:"
  echo "<SUMMARY - 1 line>"
  echo ""
  echo "<WHY - 1 line>" 
  echo ""
  echo "<WHAT - 1 line>"
  echo "${YELLOW}Your commit message:${RESET}"
  # Display the invalid commit message
  echo "${MSG}"
  
  # Ask the user if they wish to commit anyways - if answer is no then abort commit
  read -n 1 -p "Continue with commit? (y/n) " KEY
  if [[ "$KEY" != "y" ]]; then
    # Abort commit
    echo ""
    echo "Commit aborted"
    exit 1
  fi
fi

# Sucessful commit
echo "${GREEN}Commited with message:${RESET}"
echo "${MSG}"
